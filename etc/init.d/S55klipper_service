#!/bin/sh
#
# Starts klipper service.
#

USER_DATA=/usr/data
PROG=/usr/share/klippy-env/bin/python
PY_SCRIPT=/usr/share/klipper/klippy/klippy.py
PRINTER_DATA_DIR=$USER_DATA/printer_data
PRINTER_CONFIG_DIR=$PRINTER_DATA_DIR/config
PRINTER_LOGS_DIR=$PRINTER_DATA_DIR/logs
GCODE_FILES_DIR=$PRINTER_DATA_DIR/gcodes
PID_FILE=/var/run/klippy.pid

mcu_reset()
{
    [ -z $(pidof klipper_mcu) ] || /etc/init.d/S57klipper_mcu restart
}

rm_pyc()
{
    find /usr/share/klipper/ -iname "*.pyc" | xargs rm -rf
    sync
}

copy_config()
{
    local model=$(get_sn_mac.sh model)
    local board=$(get_sn_mac.sh board)

    case $model in
        "CR-10 H1")
            config_dir=
            gcode_dir=
            ;;

        "CR-K1")
            if [ "$board" = "CR4CU220812S10" ]; then
                config_dir=K1_CR4CU220812S10
            elif [ "$board" = "CR4CU220812S11" ]; then
                config_dir=K1_CR4CU220812S11
            elif [ "$board" = "CR4CU220812S12" ]; then
                config_dir=K1_CR4CU220812S12
            else
                config_dir=
            fi

            gcode_dir=K1
            ;;

        "CR-K1 Max")
            if [ "$board" = "CR4CU220812S11" ]; then
                config_dir=K1_MAX_CR4CU220812S11
            elif [ "$board" = "CR4CU220812S12" ]; then
                config_dir=K1_MAX_CR4CU220812S12
            else
                config_dir=
            fi

            gcode_dir=K1_Max
            ;;

        "Nebula Pad")
            config_dir=Nebula/Ender3S1
            gcode_dir=
            ;;

        *)
            config_dir=
            gcode_dir=
            ;;

    esac

    if [ -s $PRINTER_CONFIG_DIR/printer.cfg ]; then
        if [ -s $PRINTER_CONFIG_DIR/printer_params.cfg ]; then
            echo "no need to update config files"
        else
            [ "x${config_dir}" != "x" -a -d /usr/share/klipper/config/${config_dir} ] && {
                # keep printer.cfg
                cp -af `ls /usr/share/klipper/config/${config_dir}/*.cfg | grep -v printer.cfg | xargs` $PRINTER_CONFIG_DIR/
                sync
            }
        fi
    else
        [ "x${config_dir}" != "x" -a -d /usr/share/klipper/config/${config_dir} ] && {
            cp -af /usr/share/klipper/config/${config_dir}/*.cfg $PRINTER_CONFIG_DIR/
            sync
        }

        [ "x${gcode_dir}" != "x" -a -d /usr/share/klipper/gcodes/${gcode_dir} ] && {
            find /usr/share/klipper/gcodes/${gcode_dir} -iname "*.gcode" -exec cp {} ${GCODE_FILES_DIR}/ \;
            sync
        }
    fi
}

start() {

        mcu_reset

        [ -d $PRINTER_DATA_DIR ] || mkdir -p $PRINTER_DATA_DIR
        [ -d $PRINTER_CONFIG_DIR ] || mkdir -p $PRINTER_CONFIG_DIR
        [ -d $PRINTER_LOGS_DIR ] || mkdir -p $PRINTER_LOGS_DIR
        [ -d $GCODE_FILES_DIR ] || mkdir -p $GCODE_FILES_DIR

        rm_pyc
        copy_config

        HOME=/root start-stop-daemon -S -q -b -m -p $PID_FILE \
                --exec $PROG -- $PY_SCRIPT \
                $PRINTER_CONFIG_DIR/printer.cfg \
                -l $PRINTER_LOGS_DIR/klippy.log \
                -a /tmp/klippy_uds
}
stop() {
        start-stop-daemon -K -q -p $PID_FILE
}
restart() {
        stop
        start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        restart
        ;;
  *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?
